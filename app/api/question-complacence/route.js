import { NextResponse } from 'next/server';
import { cookies } from 'next/headers';

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ
const EXTERNAL_API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL;

/**
 * [POST] /api/question-complacence
 * ‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Proxy ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á External API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
 */
export async function POST(request) {
    // 1. üõ°Ô∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á Access Token
    let accessToken = request.headers.get('authorization');
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô Header ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡πÉ‡∏ô Cookie (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ await ‡∏´‡∏ô‡πâ‡∏≤ cookies())
    if (!accessToken) {
        const cookieStore = cookies();
        const tokenValue = cookieStore.get('accessToken')?.value;
        if (tokenValue) {
            accessToken = `Bearer ${tokenValue}`;
        }
    }

    // 2. üõë ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
    if (!accessToken) {
        return NextResponse.json(
            { message: "Authorization token not provided" }, 
            { status: 401 }
        );
    }

    // 3. üéØ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
    if (!EXTERNAL_API_BASE_URL) {
        console.error("ENVIRONMENT ERROR: NEXT_PUBLIC_API_BASE_URL is not set.");
        return NextResponse.json(
            { message: "Server configuration error: External API URL is missing." },
            { status: 500 }
        );
    }

    try {
        // 4. üé£ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Body
        const body = await request.json();

        // 5. üöÄ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á External API
        // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ External API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ /question-complacence
        const externalResponse = await fetch(`${EXTERNAL_API_BASE_URL}/question-complacence`, {
            method: 'POST',
            headers: {
                // ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠ Authorization token ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤
                'Authorization': accessToken,
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(body),
        });

        // 6. üì© ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å External API
        let externalData = {};
        try {
            externalData = await externalResponse.json();
        } catch (e) {
            // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà External API ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ JSON (‡πÄ‡∏ä‡πà‡∏ô 500 HTML error)
            console.error("External API did not return JSON. Status:", externalResponse.status);
            return NextResponse.json(
                { message: "External API returned an unreadable response." },
                { status: externalResponse.status || 500 }
            );
        }

        // üéØ ‡∏™‡πà‡∏á Response ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á Client ‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
        return NextResponse.json(externalData, { 
            status: externalResponse.status 
        });

    } catch (error) {
        // 7. ‚ùå ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß, JSON Parse error ‡πÉ‡∏ô‡∏ù‡∏±‡πà‡∏á Next.js)
        // ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Ç‡∏≠‡∏á 500 Internal Server Error ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ã‡∏•
        console.error("Proxy POST /question-complacence Error:", error);
        
        return NextResponse.json(
            { 
                message: 'Internal Server Error: Failed to process request or connect to the external API.',
                // error_detail: error.message // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏µ‡∏ö‡∏±‡∏Å‡πÉ‡∏ô Development
            }, 
            { status: 500 }
        );
    }
}